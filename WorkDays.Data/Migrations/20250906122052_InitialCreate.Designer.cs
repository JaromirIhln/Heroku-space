// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using WorkDays.Data;

#nullable disable

namespace WorkDays.Data.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250906122052_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("WorkDays.Data.Models.WorkDay", b =>
                {
                    b.Property<int>("WorkDayId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("WorkDayId"));

                    b.Property<TimeOnly>("Break")
                        .HasColumnType("time without time zone");

                    b.Property<DateTime>("Date")
                        .HasColumnType("timestamp with time zone");

                    b.Property<TimeOnly>("EndTime")
                        .HasColumnType("time without time zone");

                    b.Property<bool>("IsHoliday")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false);

                    b.Property<TimeOnly>("StartTime")
                        .HasColumnType("time without time zone");

                    b.Property<TimeOnly>("TotalHours")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("time without time zone")
                        .HasComputedColumnSql("(\"EndTime\" - \"StartTime\" - \"Break\")", true);

                    b.Property<int>("Type")
                        .HasColumnType("integer");

                    b.HasKey("WorkDayId");

                    b.ToTable("WorkDays");
                });
#pragma warning restore 612, 618
        }
    }
}
